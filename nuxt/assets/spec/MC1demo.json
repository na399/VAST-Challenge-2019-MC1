{
  "$schema": "https://vega.github.io/schema/vega/v5.json",
  "width": 1640,
  "height": 1940,
  "padding": 20,

  "config": {
    "axisBand": {
      "bandPosition": 1,
      "tickExtra": true,
      "tickOffset": 0
    }
  },

  "signals": [
    { "name": "MIN_DATE", "update": "time('Apr 8 2020')" },
    { "name": "MAX_DATE", "update": "time('Apr 10 2020')" },
    { "name": "PRE_QUAKE_TIME", "update": "time('Apr 6 2020 14:40')" },
    { "name": "FIRST_QUAKE_TIME", "update": "time('Apr 8 2020 08:35')" },
    { "name": "SECOND_QUAKE_TIME", "update": "time('Apr 9 2020 15:00')" },
    { "name": "ONE_HOUR", "update": "60 * 60 * 1000" },
    { "name": "FIVE_MIN", "update": "5 * 60 * 1000" },
    { "name": "LINE_CHARTS_X_POS", "value": 400 },
    { "name": "LINE_CHARTS_Y_POS", "value": 1080 },
    { "name": "LINE_CHARTS_WIDTH", "value": 800 },
    { "name": "LINE_CHARTS_HEIGHT", "value": 600 },
    {
      "name": "indexTime",
      "update": "FIRST_QUAKE_TIME",
      "on": [
        {
          "events": "@timeInTimeline:mouseover",
          "update": "round(invert('xTime', clamp(x(), 0, 800)) / FIVE_MIN) * FIVE_MIN"
        },
        {
          "events": "timer{1000}",
          "update": "TimelineControl == 'Play' && indexTime + FIVE_MIN < MAX_DATE ? indexTime + FIVE_MIN : MAX_DATE"
        }
      ]
    },
    {
      "name": "indexTimeLC",
      "update": "{ active: false, time: indexTime }",
      "on": [
        {
          "events": "@xLineAxis:mousemove",
          "update": "{ active: true, time: round(invert('xTimeLC', clamp(x() - LINE_CHARTS_X_POS , 0, 800)) / FIVE_MIN) * FIVE_MIN }"
        },
        {
          "events": "@xLineAxis:mouseout",
          "update": "{ active: false, time: indexTime }"
        }
      ]
    },
    {
      "name": "timeSpan",
      "on": [
        {
          "events": { "signal": "indexTime" },
          "update": "[MIN_DATE, indexTime]"
        }
      ]
    },
    {
      "name": "detailDomain",
      "update": "heatmapBrush ? heatmapBrush : [MIN_DATE, indexTime]"
    },
    { "name": "heatmapBrush", "value": null },
    { "name": "RANGE_STEP", "value": 100 },
    { "name": "height", "update": "RANGE_STEP * 6" },
    {
      "name": "SelectCategory",
      "value": "shake_intensity",
      "bind": {
        "input": "select",
        "options": [
          "shake_intensity",
          "medical",
          "power",
          "buildings",
          "sewer_and_water",
          "roads_and_bridges"
        ]
      }
    },
    {
      "name": "SelectLocation",
      "value": 4,
      "bind": {
        "input": "select",
        "options": [
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15,
          16,
          17,
          18,
          19
        ]
      },
      "on": [
        {
          "events": "@MAPmark:click, @MAPtimemark:click, @hdi95mark:click, @hdi80mark:click, @hdi50mark:click",
          "update": "datum.loc"
        }
      ]
    },
    {
      "name": "HighlightSelectedLoc",
      "value": false,
      "bind": {
        "input": "radio",
        "options": [true, false]
      }
    },
    {
      "name": "TimelineControl",
      "value": "Play",
      "bind": {
        "input": "radio",
        "options": ["Play", "Pause"]
      }
    },
    {
      "name": "Colour",
      "value": "VSUP",
      "bind": {
        "input": "radio",
        "options": ["VSUP", "VSUP_", "Normal"]
      }
    },
    {
      "name": "ShowCategory",
      "value": "Single",
      "bind": {
        "input": "radio",
        "options": ["Single", "All"]
      }
    },
    {
      "name": "FillMap",
      "value": true,
      "bind": {
        "input": "radio",
        "options": [true, false]
      }
    },
    {
      "name": "ShowName",
      "value": false,
      "bind": {
        "input": "radio",
        "options": [true, false]
      }
    },
    {
      "name": "ShowFacilities",
      "value": false,
      "bind": {
        "input": "radio",
        "options": [true, false]
      }
    },
    {
      "name": "ShowRawReports",
      "value": true,
      "bind": {
        "input": "radio",
        "options": [true, false]
      }
    },
    {
      "name": "SortOption",
      "value": "hdi95\\.lower",
      "bind": {
        "input": "select",
        "options": ["hdi95\\.lower", "hdi80\\.lower", "hdi50\\.lower", "MAP"]
      }
    },
    {
      "name": "lookupCat",
      "value": {
        "shake_intensity": "Shake Intensity",
        "medical": "Medical",
        "power": "Power",
        "buildings": "Buildings",
        "sewer_and_water": "Sewer & Water",
        "roads_and_bridges": "Roads & Bridges"
      }
    },
    {
      "name": "lookupLocName",
      "value": {
        "1": "Palace Hills",
        "2": "Northwest",
        "3": "Old Town",
        "4": "Safe Town",
        "5": "Southwest",
        "6": "Downtown",
        "7": "Wilson Forest",
        "8": "Scenic Vista",
        "9": "Broadview",
        "10": "Chapparal",
        "11": "Terrapin Springs",
        "12": "Pepper Mill",
        "13": "Cheddarford",
        "14": "Easton",
        "15": "Weston",
        "16": "Southton",
        "17": "Oak Willow",
        "18": "East Parton",
        "19": "West Parton"
      }
    }
  ],

  "data": [
    {
      "name": "locNames",
      "values": [
        { "loc": "1", "name": "Palace Hills" },
        { "loc": "2", "name": "Northwest" },
        { "loc": "3", "name": "Old Town" },
        { "loc": "4", "name": "Safe Town" },
        { "loc": "5", "name": "Southwest" },
        { "loc": "6", "name": "Downtown" },
        { "loc": "7", "name": "Wilson Forest" },
        { "loc": "8", "name": "Scenic Vista" },
        { "loc": "9", "name": "Broadview" },
        { "loc": "10", "name": "Chapparal" },
        { "loc": "11", "name": "Terrapin Springs" },
        { "loc": "12", "name": "Pepper Mill" },
        { "loc": "13", "name": "Cheddarford" },
        { "loc": "14", "name": "Easton" },
        { "loc": "15", "name": "Weston" },
        { "loc": "16", "name": "Southton" },
        { "loc": "17", "name": "Oak Willow" },
        { "loc": "18", "name": "East Parton" },
        { "loc": "19", "name": "West Parton" }
      ]
    },
    {
      "name": "colourThreshold",
      "values": [
        { "start": 0, "end": 1.25 },
        { "start": 1.25, "end": 2.5 },
        { "start": 2.5, "end": 3.75 },
        { "start": 3.75, "end": 5 },
        { "start": 5, "end": 6.25 },
        { "start": 6.25, "end": 7.5 },
        { "start": 7.5, "end": 8.75 },
        { "start": 8.75, "end": 10 }
      ]
    },
    {
      "name": "CIRThreshold",
      "values": [
        { "id": 4, "CIR": "95% Credible Interval", "CIR_": "95% CIR" },
        { "id": 3, "CIR": "Range (CIR)", "CIR_": "0 - 1.25" },
        { "id": 2, "CIR": "0 - 2.50", "CIR_": "1.26 - 2.50" },
        { "id": 1, "CIR": "2.51 - 5.00", "CIR_": "2.51 - 5.00" },
        { "id": 0, "CIR": "> 5.00", "CIR_": "> 5.00" }
      ]
    },
    {
      "name": "allSummary",
      "url": "/data/demo/all_summary_processed.csv",
      "format": {
        "type": "csv",
        "parse": {
          "loc": "number",
          "time": "date",
          "time_end": "date"
        }
      }
    },
    {
      "name": "aggregatedSummary",
      "url": "/data/demo/all_summary_aggregated.csv",
      "format": {
        "type": "csv",
        "parse": {
          "loc": "number",
          "dateHour": "date"
        }
      }
    },
    {
      "name": "aggregatedReports",
      "url": "/data/demo/mc1-reports-data-aggregated.csv",
      "format": {
        "type": "csv",
        "parse": {
          "loc": "number",
          "time": "date"
        }
      }
    },
    {
      "name": "allSummaryAtTime",
      "source": "allSummary",
      "transform": [
        {
          "type": "filter",
          "expr": "datum.time == indexTime"
        }
      ]
    },
    {
      "name": "selectedCategorySummary",
      "source": "allSummaryAtTime",
      "transform": [
        {
          "type": "filter",
          "expr": "datum.cat == SelectCategory"
        }
      ]
    },
    {
      "name": "locationSummary",
      "source": "allSummary",
      "transform": [
        {
          "type": "filter",
          "expr": "datum.loc == SelectLocation"
        }
      ]
    },
    {
      "name": "timepoints",
      "transform": [
        {
          "type": "sequence",
          "start": { "signal": "MIN_DATE" },
          "stop": { "signal": "MAX_DATE" },
          "step": { "signal": "FIVE_MIN" },
          "as": "time"
        }
      ]
    },
    {
      "name": "StHimarkGeo",
      "url": "/data/StHimark.geo.json",
      "format": {
        "type": "json",
        "property": "features"
      },
      "transform": [
        {
          "type": "lookup",
          "from": "selectedCategorySummary",
          "key": "loc",
          "fields": ["properties['loc']"],
          "values": ["MAP", "CIR"]
        }
      ]
    }
  ],

  "scales": [
    {
      "name": "xTime",
      "type": "time",
      "domain": { "data": "timepoints", "field": "time" },
      "range": [0, 800]
    },
    {
      "name": "xTimeLC",
      "type": "time",
      "domain": { "data": "timepoints", "field": "time" },
      "domainRaw": { "signal": "detailDomain" },
      "range": [0, 800]
    },
    {
      "name": "cscale",
      "type": "threshold",
      "range": [
        "hsl(184, 30%, 84%)",
        "hsl(26, 100%, 66%)",
        "hsl(2, 95%, 48%)",
        "hsl(4, 87%, 16%)"
      ],
      "domain": [2.5, 5, 7.5, 10]
    },
    {
      "name": "vsup0",
      "type": "threshold",
      "range": [
        "hsl(184, 30%, 84%)",
        "hsl(26, 100%, 66%)",
        "hsl(2, 95%, 48%)",
        "hsl(4, 87%, 16%)"
      ],
      "domain": [2.5, 5, 7.5, 10]
    },
    {
      "name": "vsup1",
      "type": "threshold",
      "range": ["hsl(37, 100%, 83%)", "hsl(11, 49%, 55%)"],
      "domain": [5, 10]
    },
    {
      "name": "vsup2",
      "type": "threshold",
      "range": ["hsl(20, 100%, 85%)"],
      "domain": [10]
    },
    {
      "name": "vsup0_",
      "type": "threshold",
      "range": [
        "hsl(193, 100%, 75%)",
        "hsl(45, 86%, 79%)",
        "hsl(31, 100%, 70%)",
        "hsl(21, 100%, 62%)",
        "hsl(11, 100%, 53%)",
        "hsl(2, 91%, 40%)",
        "hsl(1, 84%, 24%)",
        "hsl(7, 96%, 9%)"
      ],
      "domain": [1.25, 2.5, 3.75, 5, 6.25, 7.5, 8.75, 10]
    },
    {
      "name": "vsup1_",
      "type": "threshold",
      "range": [
        "hsl(189, 30%, 88%)",
        "hsl(26, 100%, 75%)",
        "hsl(10, 98%, 63%)",
        "hsl(8, 35%, 36%)"
      ],
      "domain": [2.5, 5, 7.5, 10]
    },
    {
      "name": "vsup2_",
      "type": "threshold",
      "range": ["hsl(37, 100%, 87%)", "hsl(11, 54%, 67%)"],
      "domain": [5, 10]
    },
    {
      "name": "vsup3_",
      "type": "threshold",
      "range": ["hsl(19, 100%, 89%)"],
      "domain": [10]
    },
    {
      "name": "xHeatmap",
      "type": "time",
      "domain": { "data": "timepoints", "field": "dateHour" },
      "domainRaw": { "signal": "timeSpan" },
      "range": [0, 800]
    }
  ],

  "marks": [
    {
      "type": "group",
      "name": "map",
      "encode": {
        "enter": {
          "width": { "value": 800 },
          "height": { "value": 662 },
          "x": { "value": 0 },
          "y": { "value": -50 }
        }
      },
      "scales": [
        {
          "name": "xPosNum",
          "type": "ordinal",
          "domain": [
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19
          ],
          "range": [
            70,
            190,
            340,
            480,
            190,
            190,
            755,
            660,
            425,
            575,
            660,
            660,
            540,
            340,
            265,
            265,
            425,
            425,
            340
          ]
        },
        {
          "name": "yPosNum",
          "type": "ordinal",
          "domain": [
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19
          ],
          "range": [
            120,
            120,
            120,
            175,
            330,
            250,
            360,
            570,
            520,
            470,
            470,
            360,
            360,
            220,
            220,
            300,
            415,
            330,
            330
          ]
        }
      ],
      "projections": [
        {
          "name": "projection",
          "type": "identity",
          "reflectY": true,
          "size": [800, 662],
          "fit": { "signal": "data('StHimarkGeo')" }
        }
      ],
      "marks": [
        {
          "type": "shape",
          "from": {
            "data": "StHimarkGeo"
          },
          "encode": {
            "update": {
              "strokeWidth": [
                {
                  "test": "HighlightSelectedLoc == true && datum.properties['loc'] == SelectLocation",
                  "value": 3
                },
                { "value": 0.5 }
              ],
              "stroke": [
                {
                  "test": "HighlightSelectedLoc == true && datum.loc == SelectLocation",
                  "value": "black"
                },
                { "value": "grey" }
              ],
              "fill": [
                {
                  "test": "FillMap == false || ShowCategory == 'All' || datum.MAP == null || datum.CIR == null",
                  "value": null
                },
                {
                  "test": "Colour == 'VSUP' && datum.CIR <= 2.5",
                  "scale": "vsup0",
                  "field": "MAP"
                },
                {
                  "test": "Colour == 'VSUP' && datum.CIR <= 5",
                  "scale": "vsup1",
                  "field": "MAP"
                },
                {
                  "test": "Colour == 'VSUP' && datum.CIR > 5",
                  "scale": "vsup2",
                  "field": "MAP"
                },
                {
                  "test": "Colour == 'VSUP_' && datum.CIR <= 1.25",
                  "scale": "vsup0_",
                  "field": "MAP"
                },
                {
                  "test": "Colour == 'VSUP_' && datum.CIR <= 2.5",
                  "scale": "vsup1_",
                  "field": "MAP"
                },
                {
                  "test": "Colour == 'VSUP_' && datum.CIR <= 5",
                  "scale": "vsup2_",
                  "field": "MAP"
                },
                {
                  "test": "Colour == 'VSUP_' && datum.CIR > 5",
                  "scale": "vsup3_",
                  "field": "MAP"
                },

                {
                  "test": "Colour == 'Normal'",
                  "scale": "cscale",
                  "field": "MAP"
                },
                { "value": null }
              ],
              "fillOpacity": {
                "value": 1
              }
            }
          },
          "transform": [
            {
              "type": "geoshape",
              "projection": "projection"
            }
          ]
        },
        {
          "type": "image",
          "encode": {
            "enter": {
              "url": { "value": "/img/mc1-majorquake-shakemap-transparent.png" },
              "width": { "value": 800 },
              "height": { "value": 662 },
              "x": { "value": 0 },
              "y": { "value": 0 }
            },
            "update": {
              "opacity": [
                {
                  "test": "inrange(indexTime, [FIRST_QUAKE_TIME, FIRST_QUAKE_TIME + ONE_HOUR])",
                  "value": 0.6
                },
                { "value": 0 }
              ]
            }
          }
        },
        {
          "type": "image",
          "encode": {
            "enter": {
              "url": { "value": "/img/mc1-prequake-shakemap-transparent.png" },
              "width": { "value": 800 },
              "height": { "value": 662 },
              "x": { "value": 0 },
              "y": { "value": 0 }
            },
            "update": {
              "opacity": [
                {
                  "test": "inrange(indexTime, [PRE_QUAKE_TIME, PRE_QUAKE_TIME + ONE_HOUR])",
                  "value": 0.6
                },
                { "value": 0 }
              ]
            }
          }
        },
        {
          "type": "image",
          "encode": {
            "enter": {
              "url": { "value": "/img/ruler-legend.png" },
              "width": { "value": 800 },
              "height": { "value": 662 },
              "x": { "value": 0 },
              "y": { "value": 0 }
            }
          }
        },
        {
          "type": "image",
          "encode": {
            "enter": {
              "url": { "value": "/img/facilities.png" },
              "width": { "value": 800 },
              "height": { "value": 662 },
              "x": { "value": 0 },
              "y": { "value": 0 }
            },
            "update": {
              "opacity": [
                {
                  "test": "ShowFacilities == true",
                  "value": 1
                },
                { "value": 0 }
              ]
            }
          }
        },
        {
          "type": "image",
          "encode": {
            "enter": {
              "url": { "value": "/img/categories.png" },
              "width": { "value": 800 },
              "height": { "value": 662 },
              "x": { "value": 0 },
              "y": { "value": 0 }
            },
            "update": {
              "opacity": [
                {
                  "test": "ShowCategory == 'All'",
                  "value": 1
                },
                { "value": 0 }
              ]
            }
          }
        },
        {
          "type": "text",
          "from": { "data": "locNames" },
          "encode": {
            "enter": {
              "text": { "field": "loc" },
              "fontSize": { "value": 14 },
              "y": { "scale": "yPosNum", "field": "loc" },
              "align": { "value": "center" },
              "tooltip": { "field": "name" },
              "x": { "scale": "xPosNum", "field": "loc", "offset": 15 }
            }
          }
        },
        {
          "type": "text",
          "from": { "data": "locNames" },
          "encode": {
            "enter": {
              "text": { "field": "name" },
              "fontSize": { "value": 14 },
              "y": { "scale": "yPosNum", "field": "loc", "offset": 60 },
              "align": { "value": "center" },
              "x": { "scale": "xPosNum", "field": "loc", "offset": 15 }
            },
            "update": {
              "opacity": [
                { "test": "ShowName == false", "value": 0 },
                { "value": 1 }
              ]
            }
          }
        },
        {
          "type": "symbol",
          "from": { "data": "allSummaryAtTime" },
          "encode": {
            "update": {
              "size": [
                {
                  "test": "ShowCategory == 'Single'",
                  "value": 800
                },
                { "value": 200 }
              ],
              "stroke": [
                {
                  "test": "HighlightSelectedLoc == true && datum.loc == SelectLocation",
                  "value": "black"
                },
                { "value": "white" }
              ],
              "strokeWidth": { "value": 0.5 },
              "fill": [
                {
                  "test": "ShowCategory == 'Single' && datum.cat != SelectCategory",
                  "value": null
                },
                {
                  "test": "Colour == 'VSUP' && datum.CIR <= 2.5",
                  "scale": "vsup0",
                  "field": "MAP"
                },
                {
                  "test": "Colour == 'VSUP' && datum.CIR <= 5",
                  "scale": "vsup1",
                  "field": "MAP"
                },
                {
                  "test": "Colour == 'VSUP' && datum.CIR > 5",
                  "scale": "vsup2",
                  "field": "MAP"
                },
                {
                  "test": "Colour == 'VSUP_' && datum.CIR <= 1.25",
                  "scale": "vsup0_",
                  "field": "MAP"
                },
                {
                  "test": "Colour == 'VSUP_' && datum.CIR <= 2.5",
                  "scale": "vsup1_",
                  "field": "MAP"
                },
                {
                  "test": "Colour == 'VSUP_' && datum.CIR <= 5",
                  "scale": "vsup2_",
                  "field": "MAP"
                },
                {
                  "test": "Colour == 'VSUP_' && datum.CIR > 5",
                  "scale": "vsup3_",
                  "field": "MAP"
                },
                { "scale": "cscale", "field": "MAP" }
              ],
              "xc": [
                {
                  "test": "ShowCategory == 'Single'",
                  "scale": "xPosNum",
                  "field": "loc",
                  "offset": 15
                },
                {
                  "test": "ShowCategory == 'All' && datum.cat == 'shake_intensity'",
                  "scale": "xPosNum",
                  "field": "loc",
                  "offset": 5
                },
                {
                  "test": "ShowCategory == 'All' && datum.cat == 'medical'",
                  "scale": "xPosNum",
                  "field": "loc",
                  "offset": 20
                },
                {
                  "test": "ShowCategory == 'All' && datum.cat == 'power'",
                  "scale": "xPosNum",
                  "field": "loc",
                  "offset": 35
                },
                {
                  "test": "ShowCategory == 'All' && datum.cat == 'buildings'",
                  "scale": "xPosNum",
                  "field": "loc",
                  "offset": 5
                },
                {
                  "test": "ShowCategory == 'All' && datum.cat == 'sewer_and_water'",
                  "scale": "xPosNum",
                  "field": "loc",
                  "offset": 20
                },
                {
                  "test": "ShowCategory == 'All' && datum.cat == 'roads_and_bridges'",
                  "scale": "xPosNum",
                  "field": "loc",
                  "offset": 35
                }
              ],
              "yc": [
                {
                  "test": "ShowCategory == 'Single'",
                  "scale": "yPosNum",
                  "field": "loc",
                  "offset": 25
                },
                {
                  "test": "ShowCategory == 'All' && datum.cat == 'shake_intensity'",
                  "scale": "yPosNum",
                  "field": "loc",
                  "offset": 15
                },
                {
                  "test": "ShowCategory == 'All' && datum.cat == 'medical'",
                  "scale": "yPosNum",
                  "field": "loc",
                  "offset": 15
                },
                {
                  "test": "ShowCategory == 'All' && datum.cat == 'power'",
                  "scale": "yPosNum",
                  "field": "loc",
                  "offset": 15
                },
                {
                  "test": "ShowCategory == 'All' && datum.cat == 'buildings'",
                  "scale": "yPosNum",
                  "field": "loc",
                  "offset": 30
                },
                {
                  "test": "ShowCategory == 'All' && datum.cat == 'sewer_and_water'",
                  "scale": "yPosNum",
                  "field": "loc",
                  "offset": 30
                },
                {
                  "test": "ShowCategory == 'All' && datum.cat == 'roads_and_bridges'",
                  "scale": "yPosNum",
                  "field": "loc",
                  "offset": 30
                }
              ]
            }
          }
        },
        {
          "type": "symbol",
          "from": { "data": "allSummaryAtTime" },
          "encode": {
            "update": {
              "size": [
                {
                  "test": "ShowCategory == 'Single' && datum.in60min == 1",
                  "value": 80
                },
                {
                  "test": "ShowCategory == 'Single' && datum.over60min == 1",
                  "value": 160
                },
                { "test": "datum.in60min == 1", "value": 20 },
                { "test": "datum.over60min == 1", "value": 40 }
              ],
              "fill": [
                {
                  "test": "ShowCategory == 'Single' && datum.cat != SelectCategory",
                  "value": null
                },
                {
                  "test": "datum.in60min == 1 || datum.over60min == 1",
                  "value": "white"
                }
              ],
              "opacity": [
                { "test": "datum.in60min == 1", "value": 0.5 },
                { "test": "datum.over60min == 1", "value": 1 }
              ],
              "xc": [
                {
                  "test": "ShowCategory == 'Single'",
                  "scale": "xPosNum",
                  "field": "loc",
                  "offset": 15
                },
                {
                  "test": "ShowCategory == 'All' && datum.cat == 'shake_intensity'",
                  "scale": "xPosNum",
                  "field": "loc",
                  "offset": 5
                },
                {
                  "test": "ShowCategory == 'All' && datum.cat == 'medical'",
                  "scale": "xPosNum",
                  "field": "loc",
                  "offset": 20
                },
                {
                  "test": "ShowCategory == 'All' && datum.cat == 'power'",
                  "scale": "xPosNum",
                  "field": "loc",
                  "offset": 35
                },
                {
                  "test": "ShowCategory == 'All' && datum.cat == 'buildings'",
                  "scale": "xPosNum",
                  "field": "loc",
                  "offset": 5
                },
                {
                  "test": "ShowCategory == 'All' && datum.cat == 'sewer_and_water'",
                  "scale": "xPosNum",
                  "field": "loc",
                  "offset": 20
                },
                {
                  "test": "ShowCategory == 'All' && datum.cat == 'roads_and_bridges'",
                  "scale": "xPosNum",
                  "field": "loc",
                  "offset": 35
                }
              ],
              "yc": [
                {
                  "test": "ShowCategory == 'Single'",
                  "scale": "yPosNum",
                  "field": "loc",
                  "offset": 25
                },
                {
                  "test": "ShowCategory == 'All' && datum.cat == 'shake_intensity'",
                  "scale": "yPosNum",
                  "field": "loc",
                  "offset": 15
                },
                {
                  "test": "ShowCategory == 'All' && datum.cat == 'medical'",
                  "scale": "yPosNum",
                  "field": "loc",
                  "offset": 15
                },
                {
                  "test": "ShowCategory == 'All' && datum.cat == 'power'",
                  "scale": "yPosNum",
                  "field": "loc",
                  "offset": 15
                },
                {
                  "test": "ShowCategory == 'All' && datum.cat == 'sewer_and_water'",
                  "scale": "yPosNum",
                  "field": "loc",
                  "offset": 30
                },
                {
                  "test": "ShowCategory == 'All' && datum.cat == 'buildings'",
                  "scale": "yPosNum",
                  "field": "loc",
                  "offset": 30
                },
                {
                  "test": "ShowCategory == 'All' && datum.cat == 'roads_and_bridges'",
                  "scale": "yPosNum",
                  "field": "loc",
                  "offset": 30
                }
              ]
            }
          }
        }
      ]
    },
    {
      "type": "group",
      "name": "errorBarChart",
      "description": "MAP with CI",
      "encode": {
        "enter": {
          "width": { "value": 800 },
          "height": { "value": 700 },
          "x": { "value": 840 },
          "y": { "value": 0 }
        }
      },
      "scales": [
        {
          "name": "yscale",
          "type": "band",
          "range": [0, 630],
          "domain": {
            "data": "selectedCategorySummary",
            "field": "loc",
            "sort": {
              "op": "max",
              "field": { "signal": "SortOption" },
              "order": "descending"
            }
          }
        },
        {
          "name": "xscale",
          "type": "linear",
          "range": [0, 800],
          "round": true,
          "domain": [0, 10],
          "zero": false,
          "nice": true
        }
      ],
      "axes": [
        {
          "orient": "top",
          "scale": "xscale",
          "zindex": 1,
          "title": "Rating",
          "labelFontSize": 16,
          "titleFontSize": 14,
          "tickSize": 60
        },
        {
          "orient": "left",
          "scale": "yscale",
          "zindex": 1,
          "title": "Neighbourhood",
          "labelFontSize": 16,
          "titleFontSize": 14
        }
      ],
      "marks": [
        {
          "name": "colourScale",
          "type": "rect",
          "from": { "data": "colourThreshold" },
          "encode": {
            "update": {
              "x": { "scale": "xscale", "field": "start" },
              "x2": { "scale": "xscale", "field": "end" },
              "y": { "value": -15 },
              "y2": { "value": 0 },
              "fill": [
                {
                  "test": "Colour == 'VSUP'",
                  "scale": "vsup2",
                  "field": "start"
                },
                {
                  "test": "Colour == 'VSUP_'",
                  "scale": "vsup3_",
                  "field": "start"
                },
                { "scale": "cscale", "field": "start" }
              ]
            }
          }
        },
        {
          "name": "colourScale1",
          "type": "rect",
          "from": { "data": "colourThreshold" },
          "encode": {
            "update": {
              "x": { "scale": "xscale", "field": "start" },
              "x2": { "scale": "xscale", "field": "end" },
              "y": { "value": -30 },
              "y2": { "value": -15 },
              "fill": [
                {
                  "test": "Colour == 'VSUP'",
                  "scale": "vsup1",
                  "field": "start"
                },
                {
                  "test": "Colour == 'VSUP_'",
                  "scale": "vsup2_",
                  "field": "start"
                },
                { "scale": "cscale", "field": "start" }
              ]
            }
          }
        },
        {
          "name": "colourScale2",
          "type": "rect",
          "from": { "data": "colourThreshold" },
          "encode": {
            "update": {
              "x": { "scale": "xscale", "field": "start" },
              "x2": { "scale": "xscale", "field": "end" },
              "y": { "value": -45 },
              "y2": { "value": -30 },
              "fill": [
                {
                  "test": "Colour == 'VSUP'",
                  "scale": "vsup0",
                  "field": "start"
                },
                {
                  "test": "Colour == 'VSUP_'",
                  "scale": "vsup1_",
                  "field": "start"
                }
              ]
            }
          }
        },
        {
          "name": "colourScale3",
          "type": "rect",
          "from": { "data": "colourThreshold" },
          "encode": {
            "update": {
              "x": { "scale": "xscale", "field": "start" },
              "x2": { "scale": "xscale", "field": "end" },
              "y": { "value": -60 },
              "y2": { "value": -45 },
              "fill": [
                {
                  "test": "Colour == 'VSUP_'",
                  "scale": "vsup0_",
                  "field": "start"
                }
              ]
            }
          }
        },
        {
          "type": "text",
          "from": { "data": "CIRThreshold" },
          "encode": {
            "enter": {
              "x": { "value": 815 },
              "fontSize": { "value": 15 }
            },
            "update": {
              "y": { "signal": "(-15) * datum.id" },
              "fontWeight": [
                {
                  "test": "Colour == 'VSUP' && datum.id >= 3",
                  "value": "bold"
                },
                { "test": "Colour == 'VSUP_'&& datum.id == 4", "value": "bold" }
              ],
              "text": [
                { "test": "Colour == 'VSUP'", "signal": "datum.CIR" },
                { "test": "Colour == 'VSUP_'", "signal": "datum.CIR_" },
                { "value": "" }
              ]
            }
          }
        },
        {
          "name": "hdi95mark",
          "type": "rect",
          "from": { "data": "selectedCategorySummary" },
          "encode": {
            "enter": {
              "fill": { "value": "hsl(0, 0%, 90%)" },
              "height": { "value": 6 }
            },
            "update": {
              "yc": { "scale": "yscale", "field": "loc", "band": 0.5 },
              "x": { "scale": "xscale", "field": "hdi95\\.lower" },
              "x2": { "scale": "xscale", "field": "hdi95\\.upper" }
            }
          }
        },
        {
          "name": "hdi80mark",
          "type": "rect",
          "from": { "data": "selectedCategorySummary" },
          "encode": {
            "enter": {
              "fill": { "value": "hsl(0, 0%, 85%)" },
              "height": { "value": 10 }
            },
            "update": {
              "yc": { "scale": "yscale", "field": "loc", "band": 0.5 },
              "x": { "scale": "xscale", "field": "hdi80\\.lower" },
              "x2": { "scale": "xscale", "field": "hdi80\\.upper" }
            }
          }
        },
        {
          "name": "hdi50mark",
          "type": "rect",
          "from": { "data": "selectedCategorySummary" },
          "encode": {
            "enter": {
              "fill": { "value": "hsl(0, 0%, 80%)" },
              "height": { "value": 14 }
            },
            "update": {
              "yc": { "scale": "yscale", "field": "loc", "band": 0.5 },
              "x": { "scale": "xscale", "field": "hdi50\\.lower" },
              "x2": { "scale": "xscale", "field": "hdi50\\.upper" }
            }
          }
        },
        {
          "name": "MAPmark",
          "type": "symbol",
          "from": { "data": "selectedCategorySummary" },
          "encode": {
            "enter": {
              "shape": { "value": "circle" },
              "strokeWidth": { "value": 1.5 }
            },
            "update": {
              "xc": { "scale": "xscale", "field": "MAP" },
              "yc": { "scale": "yscale", "field": "loc", "band": 0.5 },
              "fill": [
                {
                  "test": "Colour == 'VSUP' && datum.CIR <= 2.5",
                  "scale": "vsup0",
                  "field": "MAP"
                },
                {
                  "test": "Colour == 'VSUP' && datum.CIR <= 5",
                  "scale": "vsup1",
                  "field": "MAP"
                },
                {
                  "test": "Colour == 'VSUP' && datum.CIR > 5",
                  "scale": "vsup2",
                  "field": "MAP"
                },
                {
                  "test": "Colour == 'VSUP_' && datum.CIR <= 1.25",
                  "scale": "vsup0_",
                  "field": "MAP"
                },
                {
                  "test": "Colour == 'VSUP_' && datum.CIR <= 2.5",
                  "scale": "vsup1_",
                  "field": "MAP"
                },
                {
                  "test": "Colour == 'VSUP_' && datum.CIR <= 5",
                  "scale": "vsup2_",
                  "field": "MAP"
                },
                {
                  "test": "Colour == 'VSUP_' && datum.CIR > 5",
                  "scale": "vsup3_",
                  "field": "MAP"
                },
                { "scale": "cscale", "field": "MAP" }
              ],
              "stroke": [
                {
                  "test": "HighlightSelectedLoc == true && datum.loc == SelectLocation",
                  "value": "black"
                },
                { "value": "white" }
              ],
              "size": { "value": 300 },
              "tooltip": {
                "signal": "timeFormat(datum.time, '%d/%m/%Y %H:%M') + ' | MAP: '  + datum.MAP + ' | 95% CIR: '  + datum.CIR"
              }
            }
          }
        },
        {
          "name": "MAPtimemark",
          "type": "symbol",
          "from": { "data": "selectedCategorySummary" },
          "encode": {
            "update": {
              "xc": { "scale": "xscale", "field": "MAP" },
              "yc": { "scale": "yscale", "field": "loc", "band": 0.5 },
              "size": [
                { "test": "datum.in60min == 1", "value": 30 },
                { "test": "datum.over60min == 1", "value": 60 }
              ],
              "fill": [
                {
                  "test": "datum.in60min == 1 || datum.over60min == 1",
                  "value": "white"
                }
              ],
              "opacity": [
                { "test": "datum.in60min == 1", "value": 0.5 },
                { "test": "datum.over60min == 1", "value": 1 }
              ]
            }
          }
        },
        {
          "name": "LocationNameLabel",
          "type": "text",
          "from": { "data": "selectedCategorySummary" },
          "encode": {
            "enter": {
              "align": { "value": "right" },
              "fontSize": { "value": 14 },
              "baseline": { "value": "middle" }
            },
            "update": {
              "text": [
                {
                  "test": "datum['hdi95\\.lower'] > 2",
                  "field": "locName"
                },
                { "value": "" }
              ],
              "y": { "scale": "yscale", "field": "loc", "band": 0.5 },
              "x": {
                "scale": "xscale",
                "signal": "datum['hdi95\\.lower'] - 0.1"
              }
            }
          }
        },
        {
          "type": "text",
          "encode": {
            "enter": {
              "x": { "value": 0 },
              "y": { "value": 660 },
              "fontSize": { "value": 14 },
              "opacity": { "value": 0.7 },
              "text": {
                "value": "The reported ratings are modelled with Bayesian structural time series. The model yields a maximum a posteriori probability estimate (MAP,"
              }
            }
          }
        },
        {
          "type": "text",
          "encode": {
            "enter": {
              "x": { "value": 0 },
              "y": { "value": 675 },
              "fontSize": { "value": 14 },
              "opacity": { "value": 0.7 },
              "text": {
                "value": "the mode of the posterior probability distribution) and a credible interval (CI) of the mean of reported ratings at each given time point. The MAPs"
              }
            }
          }
        },
        {
          "type": "text",
          "encode": {
            "enter": {
              "x": { "value": 0 },
              "y": { "value": 690 },
              "fontSize": { "value": 14 },
              "opacity": { "value": 0.7 },
              "text": {
                "value": "and 95%, 80% & 50% CIs are visualized on the Graded Error Bar Chart above as the circle marks and the graded error bars, respectively. The"
              }
            }
          }
        },
        {
          "type": "text",
          "encode": {
            "enter": {
              "x": { "value": 0 },
              "y": { "value": 705 },
              "fontSize": { "value": 14 },
              "opacity": { "value": 0.7 },
              "text": {
                "value": "colours from the value-suppressing uncertainty palette (VSUP) encode both the values and uncertainties of the MAPs. The same information"
              }
            }
          }
        },
        {
          "type": "text",
          "encode": {
            "enter": {
              "x": { "value": 0 },
              "y": { "value": 720 },
              "fontSize": { "value": 14 },
              "opacity": { "value": 0.7 },
              "text": {
                "value": "is presented with geographical positions on the Map to the left. You may move your cursor on the timeline to change the time."
              }
            }
          }
        }
      ]
    },
    {
      "type": "group",
      "name": "timeline",
      "encode": {
        "enter": {
          "height": { "value": 30 },
          "width": { "value": 800 },
          "y": { "value": 670 }
        }
      },
      "axes": [
        {
          "orient": "bottom",
          "scale": "xTime",
          "grid": false,
          "labelFontSize": 14
        }
      ],
      "marks": [
        {
          "type": "rule",
          "name": "timeInTimeline",
          "from": { "data": "timepoints" },
          "encode": {
            "enter": {
              "x": { "scale": "xTime", "field": "time" },
              "y": { "value": 0 },
              "y2": { "field": { "group": "height" } },
              "stroke": [
                {
                  "test": "inrange(datum.time, [PRE_QUAKE_TIME, PRE_QUAKE_TIME + ONE_HOUR])",
                  "value": "hsla(220, 80%, 50%, 1)"
                },
                {
                  "test": "inrange(datum.time, [FIRST_QUAKE_TIME, FIRST_QUAKE_TIME + ONE_HOUR])",
                  "value": "hsla(220, 80%, 30%, 1)"
                },
                {
                  "test": "inrange(datum.time, [SECOND_QUAKE_TIME, SECOND_QUAKE_TIME + ONE_HOUR])",
                  "value": "hsla(220, 80%, 40%, 1)"
                },
                { "value": "hsla(0, 0%, 80%, 0.2)" }
              ],
              "cursor": { "value": "pointer" }
            }
          }
        },
        {
          "type": "rule",
          "encode": {
            "update": {
              "x": { "scale": "xTime", "signal": "indexTime" },
              "y": { "value": 0 },
              "y2": { "field": { "group": "height" } },
              "stroke": { "value": "hsl(180, 50%, 30%)" }
            }
          }
        },
        {
          "type": "text",
          "encode": {
            "enter": {
              "y": { "value": 0, "offset": -5 },
              "align": { "value": "center" },
              "fontSize": { "value": 14 },
              "fill": { "value": "hsl(180, 50%, 30%)" }
            },
            "update": {
              "x": { "scale": "xTime", "signal": "indexTime" },
              "text": { "signal": "timeFormat(indexTime, '%d/%m/%Y %H:%M')" }
            }
          }
        }
      ]
    },
    {
      "type": "group",
      "name": "heatMap",
      "description": "Heat Map of all data categories for a given location",
      "encode": {
        "enter": {
          "height": { "value": 100 },
          "width": { "value": 800 },
          "x": { "value": 400 },
          "y": { "value": 930 }
        }
      },
      "data": [
        {
          "name": "aggregatedSummaryLocation",
          "source": "aggregatedSummary",
          "transform": [
            {
              "type": "filter",
              "expr": "datum.loc == SelectLocation"
            }
          ]
        }
      ],
      "signals": [
        {
          "name": "brush",
          "value": [0, 800],
          "on": [
            {
              "events": "window:mousedown",
              "update": "inrange(x(), [400, 1200]) && inrange(y(), [930, 1030]) ? [x() - 400, x() - 400] : brush"
            },
            {
              "events": "[window:mousedown, window:mouseup] > window:mousemove!",
              "update": "inrange(y(), [930, 1040]) ? [brush[0], if(inrange(clamp(x() - 400, 0, 800), [brush[0] - 5, brush[0] + 5]), brush[0] + 10, clamp(x() - 400, 0, 800))] : brush"
            },
            {
              "events": { "signal": "delta" },
              "update": "clampRange([anchor[0] + delta, anchor[1] + delta], 0, 800)"
            }
          ]
        },
        {
          "name": "heatmapBrush",
          "push": "outer",
          "on": [
            {
              "events": { "signal": "brush" },
              "update": "invert('xHeatmap', brush)"
            },
            {
              "events": { "signal": "indexTime" },
              "update": "invert('xHeatmap', brush)"
            }
          ]
        },
        {
          "name": "anchor",
          "value": null,
          "on": [{ "events": "@brush:mousedown", "update": "slice(brush)" }]
        },
        {
          "name": "xdown",
          "value": 0,
          "on": [{ "events": "@brush:mousedown", "update": "x() - 400" }]
        },
        {
          "name": "delta",
          "value": 0,
          "on": [
            {
              "events": "[@brush:mousedown, window:mouseup] > window:mousemove!",
              "update": "x() - xdown"
            }
          ]
        }
      ],
      "scales": [
        {
          "name": "rowHeatmap",
          "type": "band",
          "domain": [
            "shake_intensity",
            "medical",
            "power",
            "buildings",
            "sewer_and_water",
            "roads_and_bridges"
          ],
          "range": [0, 100]
        }
      ],
      "axes": [
        {
          "orient": "top",
          "scale": "xHeatmap",
          "zindex": 1,
          "labelFontSize": 14
        },
        {
          "orient": "left",
          "scale": "rowHeatmap",
          "domain": false,
          "tickSize": 0,
          "offset": 10,
          "labelFontSize": 14,
          "encode": {
            "labels": {
              "interactive": false,
              "update": {
                "text": { "signal": "lookupCat[datum.value]" }
              }
            }
          }
        }
      ],
      "marks": [
        {
          "type": "text",
          "encode": {
            "enter": {
              "x": { "value": -400 },
              "y": { "value": 10 },
              "fontSize": { "value": 20 },
              "opacity": { "value": 0.8 },
              "text": { "value": "Neighbourhood: " }
            }
          }
        },
        {
          "type": "text",
          "encode": {
            "enter": {
              "x": { "value": -400 },
              "y": { "value": 40 },
              "fontSize": { "value": 20 },
              "fontWeight": { "value": "bold" },
              "opacity": { "value": 0.9 }
            },
            "update": {
              "text": {
                "signal": "SelectLocation + '  ' + lookupLocName[SelectLocation]"
              }
            }
          }
        },
        {
          "type": "text",
          "encode": {
            "enter": {
              "x": { "value": -400 },
              "y": { "value": 90 },
              "fontSize": { "value": 14 },
              "opacity": { "value": 0.7 },
              "text": { "value": "The Heat Map displays the maximum" }
            }
          }
        },
        {
          "type": "text",
          "encode": {
            "enter": {
              "x": { "value": -400 },
              "y": { "value": 105 },
              "fontSize": { "value": 14 },
              "opacity": { "value": 0.7 },
              "text": { "value": "values of hourly aggregated MAPs" }
            }
          }
        },
        {
          "type": "text",
          "encode": {
            "enter": {
              "x": { "value": -400 },
              "y": { "value": 120 },
              "fontSize": { "value": 14 },
              "opacity": { "value": 0.7 },
              "text": { "value": "of ratings and their respective 95% CIRs." }
            }
          }
        },
        {
          "type": "text",
          "encode": {
            "enter": {
              "x": { "value": -400 },
              "y": { "value": 135 },
              "fontSize": { "value": 14 },
              "opacity": { "value": 0.7 },
              "text": { "value": "You may click and drag on the Heat Map" }
            }
          }
        },
        {
          "type": "text",
          "encode": {
            "enter": {
              "x": { "value": -400 },
              "y": { "value": 150 },
              "fontSize": { "value": 14 },
              "opacity": { "value": 0.7 },
              "text": { "value": "to visualize a section of the temporal" }
            }
          }
        },
        {
          "type": "text",
          "encode": {
            "enter": {
              "x": { "value": -400 },
              "y": { "value": 165 },
              "fontSize": { "value": 14 },
              "opacity": { "value": 0.7 },
              "text": { "value": "data on the Line Charts below." }
            }
          }
        },
        {
          "type": "image",
          "encode": {
            "enter": {
              "x": { "value": 950 },
              "y": { "value": -15 },
              "width": { "value": 235 }
            },
            "update": {
              "url": [
                { "test": "Colour == 'VSUP'", "value": "/img/VSUP.png" },
                { "test": "Colour == 'VSUP_'", "value": "/img/VSUP_.png" },
                { "test": "Colour == 'Normal'", "value": "/img/normal.png" },
                { "value": null }
              ],

              "height": [
                { "test": "Colour == 'Normal'", "value": 85 },
                { "value": 234 }
              ]
            }
          }
        },
        {
          "type": "rect",
          "name": "heatmapRect",
          "from": { "data": "aggregatedSummaryLocation" },
          "clip": true,
          "encode": {
            "enter": {
              "y": { "scale": "rowHeatmap", "field": "cat" },
              "height": { "scale": "rowHeatmap", "band": 1 },
              "tooltip": {
                "signal": "timeFormat(datum.dateHour, '%d/%m/%Y %H') + ' | Maximum MAP: '  + datum.maxMAP + ' | CIR of maximum MAP: '  + datum.CIRatMaxMAP"
              }
            },
            "update": {
              "x": { "scale": "xHeatmap", "field": "dateHour" },
              "width": {
                "signal": "scale('xHeatmap', MIN_DATE + 3600000)"
              },
              "fill": [
                {
                  "test": "Colour == 'VSUP' && datum.CIRatMaxMAP <= 2.5",
                  "scale": "vsup0",
                  "field": "maxMAP"
                },
                {
                  "test": "Colour == 'VSUP' && datum.CIRatMaxMAP <= 5",
                  "scale": "vsup1",
                  "field": "maxMAP"
                },
                {
                  "test": "Colour == 'VSUP' && datum.CIRatMaxMAP > 5",
                  "scale": "vsup2",
                  "field": "maxMAP"
                },
                {
                  "test": "Colour == 'VSUP_' && datum.CIRatMaxMAP <= 1.25",
                  "scale": "vsup0_",
                  "field": "maxMAP"
                },
                {
                  "test": "Colour == 'VSUP_' && datum.CIRatMaxMAP <= 2.5",
                  "scale": "vsup1_",
                  "field": "maxMAP"
                },
                {
                  "test": "Colour == 'VSUP_' && datum.CIRatMaxMAP <= 5",
                  "scale": "vsup2_",
                  "field": "maxMAP"
                },
                {
                  "test": "Colour == 'VSUP_' && datum.CIRatMaxMAP > 5",
                  "scale": "vsup3_",
                  "field": "maxMAP"
                },
                {
                  "test": "Colour == 'Normal'",
                  "scale": "cscale",
                  "field": "maxMAP"
                },
                { "value": "white" }
              ]
            }
          }
        },
        {
          "type": "rect",
          "name": "brush",
          "encode": {
            "enter": {
              "y": { "value": 0 },
              "height": { "value": 100 },
              "fill": { "value": "hsla(0, 0%, 0%, 0.01)" }
            },
            "update": {
              "x": { "signal": "brush[0]" },
              "x2": { "signal": "brush[1]" }
            }
          }
        },
        {
          "type": "rect",
          "name": "brushFill",
          "encode": {
            "enter": {
              "y": { "value": 100 },
              "height": { "value": 10 },
              "fill": { "value": "hsla(0, 0%, 0%, 0)" }
            },
            "update": {
              "x": { "signal": "brush[0]" },
              "x2": { "signal": "brush[1]" }
            }
          }
        },
        {
          "type": "rect",
          "interactive": false,
          "encode": {
            "enter": {
              "y": { "value": 0 },
              "height": { "value": 100 },
              "width": { "value": 2 },
              "fill": { "value": "hsla(180, 50%, 30%, 0.5)" }
            },
            "update": {
              "x": { "signal": "brush[0]" }
            }
          }
        },
        {
          "type": "rect",
          "interactive": false,
          "encode": {
            "enter": {
              "y": { "value": 0 },
              "height": { "value": 100 },
              "width": { "value": 2 },
              "fill": { "value": "hsla(180, 50%, 30%, 0.5)" }
            },
            "update": {
              "x": { "signal": "brush[1]" }
            }
          }
        },
        {
          "type": "rule",
          "interactive": false,
          "encode": {
            "enter": {
              "y": { "value": 100 },
              "y2": { "value": 130 },
              "x2": { "value": 1 },
              "strokeWidth": { "value": 2 },
              "stroke": { "value": "hsla(180, 50%, 30%, 0.5)" }
            },
            "update": {
              "x": { "signal": "min(brush[0], brush[1]) + 1" }
            }
          }
        },
        {
          "type": "rule",
          "interactive": false,
          "encode": {
            "enter": {
              "y": { "value": 100 },
              "y2": { "value": 130 },
              "x2": { "value": 801 },
              "strokeWidth": { "value": 2 },
              "stroke": { "value": "hsla(180, 50%, 30%, 0.5)" }
            },
            "update": {
              "x": { "signal": "max(brush[0], brush[1]) + 1" }
            }
          }
        }
      ]
    },
    {
      "type": "group",
      "name": "timelineLC",
      "clip": true,
      "encode": {
        "enter": {
          "x": { "signal": "LINE_CHARTS_X_POS" },
          "y": { "signal": "LINE_CHARTS_Y_POS - 10" },
          "width": { "signal": "LINE_CHARTS_WIDTH" },
          "height": { "signal": "15" }
        }
      },
      "axes": [
        {
          "orient": "bottom",
          "scale": "xTimeLC",
          "grid": false,
          "labelFontSize": 14
        }
      ],
      "marks": [
        {
          "type": "rule",
          "name": "timeInTimelineLC",
          "from": { "data": "timepoints" },
          "encode": {
            "enter": {
              "x": { "scale": "xTimeLC", "field": "time" },
              "y": { "value": 0 },
              "y2": { "field": { "group": "height" } },
              "stroke": [
                {
                  "test": "inrange(datum.time, [FIRST_QUAKE_TIME, FIRST_QUAKE_TIME + ONE_HOUR])",
                  "value": "hsla(220, 80%, 30%, 1)"
                },
                {
                  "test": "inrange(datum.time, [SECOND_QUAKE_TIME, SECOND_QUAKE_TIME + ONE_HOUR])",
                  "value": "hsla(220, 80%, 30%, 0.9)"
                },
                { "value": "hsla(0, 0%, 80%, 0.2)" }
              ],
              "strokeWidth": { "value": 10 }
            }
          }
        },
        {
          "type": "rule",
          "encode": {
            "update": {
              "x": { "scale": "xTimeLC", "signal": "indexTimeLC" },
              "y": { "value": 10 },
              "y2": { "field": { "group": "height" } },
              "stroke": { "value": "hsl(180, 50%, 30%)" }
            }
          }
        },
        {
          "type": "text",
          "encode": {
            "enter": {
              "y": { "value": 0 },
              "align": { "value": "center" },
              "fontSize": { "value": 14 },
              "fill": { "value": "hsl(180, 50%, 30%)" }
            },
            "update": {
              "x": { "scale": "xTimeLC", "signal": "indexTimeLC" },
              "text": { "signal": "timeFormat(indexTimeLC, '%d/%m/%Y %H:%M')" }
            }
          }
        }
      ]
    },
    {
      "type": "group",
      "name": "lineCharts",
      "description": "Line Charts of all data categories for a given location",
      "encode": {
        "enter": {
          "x": { "signal": "LINE_CHARTS_X_POS" },
          "y": { "signal": "LINE_CHARTS_Y_POS" },
          "width": { "signal": "LINE_CHARTS_WIDTH" },
          "height": { "signal": "LINE_CHARTS_HEIGHT" }
        }
      },
      "data": [
        {
          "name": "aggregatedReports",
          "source": "aggregatedReports",
          "transform": [
            {
              "type": "filter",
              "expr": "datum.location == SelectLocation"
            }
          ]
        }
      ],
      "scales": [
        {
          "name": "yLine",
          "type": "linear",
          "round": true,
          "domain": [0, 10],
          "range": [10, 90],
          "nice": true,
          "zero": true,
          "reverse": true
        },
        {
          "name": "xLine",
          "type": "time",
          "domain": { "data": "timepoints", "field": "time" },
          "domainRaw": { "signal": "detailDomain" },
          "range": [0, 800]
        },
        {
          "name": "row",
          "type": "band",
          "domain": [
            "shake_intensity",
            "medical",
            "power",
            "buildings",
            "sewer_and_water",
            "roads_and_bridges"
          ],
          "range": { "step": { "signal": "RANGE_STEP" } }
        },
        {
          "name": "radiusMark",
          "type": "log",
          "domain": [1, 3000],
          "range": [5, 120]
        }
      ],
      "axes": [
        {
          "orient": "bottom",
          "scale": "xTimeLC",
          "offset": 15,
          "labelFontSize": 14,
          "encode": {
            "domain": {
              "name": "xLineAxis",
              "interactive": true,
              "enter": {
                "y": { "value": -10 },
                "stroke": { "value": "hsla(0, 0%, 90%, 0.5)" },
                "strokeWidth": { "value": 15 },
                "cursor": { "value": "pointer" }
              }
            }
          }
        },
        {
          "orient": "left",
          "scale": "row",
          "domain": false,
          "tickSize": 0,
          "offset": 10,
          "labelFontSize": 14,
          "encode": {
            "labels": {
              "interactive": false,
              "update": {
                "text": { "signal": "lookupCat[datum.value]" }
              }
            }
          }
        }
      ],
      "legends": [
        {
          "title": "Number of reports",
          "size": "radiusMark",
          "direction": "vertical",
          "orient": "none",
          "legendX": 950,
          "legendY": 470,
          "padding": 20,
          "fillColor": "hsl(0, 0%, 95%)",
          "symbolType": "square",
          "symbolFillColor": "hsl(0, 0%, 50%)",
          "symbolStrokeWidth": 0,
          "values": [1, 10, 100, 1000],
          "titleFontSize": 15,
          "labelFontSize": 14
        }
      ],
      "marks": [
        {
          "type": "text",
          "encode": {
            "enter": {
              "x": { "value": -400 },
              "y": { "value": 90 },
              "fontSize": { "value": 14 },
              "opacity": { "value": 0.7 },
              "text": { "value": "The Line Charts display the MAPs and" }
            }
          }
        },
        {
          "type": "text",
          "encode": {
            "enter": {
              "x": { "value": -400 },
              "y": { "value": 105 },
              "fontSize": { "value": 14 },
              "opacity": { "value": 0.7 },
              "text": { "value": "95% CIs of reported ratings. The square" }
            }
          }
        },
        {
          "type": "text",
          "encode": {
            "enter": {
              "x": { "value": -400 },
              "y": { "value": 120 },
              "fontSize": { "value": 14 },
              "opacity": { "value": 0.7 },
              "text": {
                "value": "marks show the counts of the reports. "
              }
            }
          }
        },
        {
          "type": "text",
          "encode": {
            "enter": {
              "x": { "value": -400 },
              "y": { "value": 135 },
              "fontSize": { "value": 14 },
              "opacity": { "value": 0.7 },
              "text": {
                "value": "at each time point. When there is no"
              }
            }
          }
        },
        {
          "type": "text",
          "encode": {
            "enter": {
              "x": { "value": -400 },
              "y": { "value": 150 },
              "fontSize": { "value": 14 },
              "opacity": { "value": 0.7 },
              "text": {
                "value": "report within the last hour, the Line"
              }
            }
          }
        },
        {
          "type": "text",
          "encode": {
            "enter": {
              "x": { "value": -400 },
              "y": { "value": 165 },
              "fontSize": { "value": 14 },
              "opacity": { "value": 0.7 },
              "text": {
                "value": "Charts are marked with white stripes."
              }
            }
          }
        },
        {
          "type": "group",
          "from": {
            "facet": {
              "name": "cat",
              "data": "locationSummary",
              "groupby": "cat"
            }
          },
          "encode": {
            "enter": {
              "x": { "value": 0 },
              "y": { "scale": "row", "field": "cat" },
              "width": { "value": 800 },
              "height": { "signal": "RANGE_STEP" }
            }
          },
          "axes": [
            {
              "orient": "right",
              "scale": "yLine",
              "tickCount": 6,
              "labelFontSize": 14,
              "offset": 10
            }
          ],
          "marks": [
            {
              "type": "area",
              "from": { "data": "cat" },
              "clip": true,
              "encode": {
                "enter": {
                  "fill": { "value": "hsl(0, 0%, 90%)" }
                },
                "update": {
                  "x": { "scale": "xLine", "field": "time" },
                  "y": { "scale": "yLine", "field": "hdi95\\.lower" },
                  "y2": { "scale": "yLine", "field": "hdi95\\.upper" }
                }
              }
            },
            {
              "type": "line",
              "from": { "data": "cat" },
              "clip": true,
              "encode": {
                "enter": {
                  "stroke": { "value": "hsl(0, 0%, 50%)" }
                },
                "update": {
                  "x": { "scale": "xLine", "field": "time" },
                  "y": { "scale": "yLine", "field": "MAP" }
                }
              }
            },
            {
              "type": "rule",
              "from": { "data": "cat" },
              "clip": true,
              "encode": {
                "update": {
                  "x": { "scale": "xLine", "field": "time" },
                  "y": { "value": 10 },
                  "y2": { "value": 90 },
                  "stroke": [
                    {
                      "test": "datum.over60min == 1 && floor(scale('xLine', datum.time)) % 1 == 0",
                      "value": "hsla(0, 0%, 100%, 0.8)"
                    },
                    { "value": null }
                  ],
                  "strokeWidth": [
                    {
                      "test": "span(detailDomain) < 10000000",
                      "value": 3
                    },
                    {
                      "test": "span(detailDomain) < 20000000",
                      "value": 2
                    },
                    { "value": 1 }
                  ]
                }
              }
            },
            {
              "type": "symbol",
              "from": { "data": "cat" },
              "encode": {
                "enter": {
                  "size": { "value": 150 },
                  "zindex": { "value": 998 }
                },
                "update": {
                  "x": [
                    {
                      "test": "datum.time > time(detailDomain[1]) + 600000",
                      "value": 820
                    },
                    {
                      "test": "indexTime > time(detailDomain[1])",
                      "scale": "xLine",
                      "signal": "detailDomain[1]",
                      "offset": 3
                    },
                    { "scale": "xLine", "field": "time", "offset": 3 }
                  ],
                  "y": { "scale": "yLine", "field": "MAP" },
                  "fill": [
                    {
                      "test": "datum.time > time(detailDomain[1]) + FIVE_MIN",
                      "value": null
                    },
                    {
                      "test": "datum.time == indexTime && Colour == 'VSUP' && datum.CIR <= 2.5",
                      "scale": "vsup0",
                      "field": "MAP"
                    },
                    {
                      "test": "datum.time == indexTime && Colour == 'VSUP' && datum.CIR <= 5",
                      "scale": "vsup1",
                      "field": "MAP"
                    },
                    {
                      "test": "datum.time == indexTime && Colour == 'VSUP' && datum.CIR > 5",
                      "scale": "vsup2",
                      "field": "MAP"
                    },
                    {
                      "test": "datum.time == indexTime && Colour == 'VSUP_' && datum.CIR <= 1.25",
                      "scale": "vsup0_",
                      "field": "MAP"
                    },
                    {
                      "test": "datum.time == indexTime && Colour == 'VSUP_' && datum.CIR <= 2.5",
                      "scale": "vsup1_",
                      "field": "MAP"
                    },
                    {
                      "test": "datum.time == indexTime && Colour == 'VSUP_' && datum.CIR <= 5",
                      "scale": "vsup2_",
                      "field": "MAP"
                    },
                    {
                      "test": "datum.time == indexTime && Colour == 'VSUP_' && datum.CIR > 5",
                      "scale": "vsup3_",
                      "field": "MAP"
                    },
                    {
                      "test": "datum.time == indexTime",
                      "scale": "cscale",
                      "field": "MAP"
                    },
                    { "value": null }
                  ]
                }
              }
            },
            {
              "type": "symbol",
              "from": { "data": "cat" },
              "encode": {
                "enter": {
                  "size": { "value": 30 },
                  "zindex": { "value": 999 }
                },
                "update": {
                  "x": [
                    {
                      "test": "datum.time > time(detailDomain[1]) + 600000",
                      "value": 820
                    },
                    {
                      "test": "indexTime > time(detailDomain[1])",
                      "scale": "xLine",
                      "signal": "detailDomain[1]",
                      "offset": 3
                    },
                    { "scale": "xLine", "field": "time", "offset": 3 }
                  ],
                  "y": { "scale": "yLine", "field": "MAP" },
                  "size": [
                    { "test": "datum.in60min == 1", "value": 30 },
                    { "test": "datum.over60min == 1", "value": 40 }
                  ],
                  "opacity": [
                    { "test": "datum.in60min == 1", "value": 0.5 },
                    { "test": "datum.over60min == 1", "value": 1 }
                  ],
                  "fill": [
                    {
                      "test": "datum.time > time(detailDomain[1]) + FIVE_MIN",
                      "value": null
                    },
                    {
                      "test": "(datum.in60min == 1 || datum.over60min == 1) && datum.time == indexTime",
                      "value": "white"
                    },
                    { "value": null }
                  ]
                }
              }
            }
          ]
        },
        {
          "type": "group",
          "from": {
            "facet": {
              "name": "cat",
              "data": "aggregatedReports",
              "groupby": "cat"
            }
          },
          "clip": true,
          "encode": {
            "enter": {
              "x": { "value": 0 },
              "y": { "scale": "row", "field": "cat" },
              "width": { "value": 800 },
              "height": { "signal": "RANGE_STEP" }
            }
          },
          "marks": [
            {
              "type": "symbol",
              "from": { "data": "cat" },
              "encode": {
                "update": {
                  "shape": { "value": "square" },
                  "x": { "scale": "xLine", "field": "time" },
                  "y": { "scale": "yLine", "field": "rating" },
                  "zindex": { "value": 99 },
                  "size": { "scale": "radiusMark", "field": "count" },
                  "fill": [
                    {
                      "test": "ShowRawReports == true",
                      "scale": "vsup0_",
                      "field": "rating"
                    },
                    { "value": null }
                  ],
                  "opacity": { "value": 0.5 },
                  "tooltip": {
                    "signal": "timeFormat(datum.time, '%d/%m/%Y %H:%M:%S') + ' | Rating: ' + datum.rating + ' | Count: ' + datum.count"
                  }
                }
              }
            }
          ]
        },
        {
          "type": "text",
          "encode": {
            "enter": {
              "y": { "value": 0, "offset": -5 },
              "align": { "value": "center" },
              "fontSize": { "value": 14 },
              "fill": { "value": "hsl(180, 50%, 30%)" }
            },
            "update": {
              "x": { "scale": "xTimeLC", "signal": "indexTimeLC.time" },
              "text": { "signal": "timeFormat(indexTimeLC.time, '%d/%m/%Y %H:%M')" },
              "opacity": [
                { "test": "indexTimeLC.active == true", "value": 1 },
                { "value": 0 }
              ]
            }
          }
        },
        {
          "type": "rule",
          "encode": {
            "update": {
              "x": { "scale": "xLine", "signal": "indexTimeLC.time" },
              "y": { "value": 0 },
              "y2": { "signal": "LINE_CHARTS_HEIGHT + 14" },
              "stroke": { "value": "hsla(180, 50%, 30%)" },
              "opacity": [
                { "test": "indexTimeLC.active == true", "value": 0.6 },
                { "value": 0 }
              ]
            }
          }
        }
      ]
    }
  ]
}
